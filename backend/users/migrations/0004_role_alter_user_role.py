# Generated by Django 5.0.2 on 2025-02-24 18:53

from django.db import migrations, models

def create_default_roles(apps, schema_editor):
    Role = apps.get_model('users', 'Role')
    User = apps.get_model('users', 'User')

    # Create default roles
    roles = {
        'SUPERADMIN': Role.objects.create(
            name='Super Administrator',
            category='SUPERADMIN',
            description='Full system access with all permissions'
        ),
        'ADMIN': Role.objects.create(
            name='Administrator',
            category='ADMIN',
            description='System administrator with limited permissions'
        ),
        'USER': Role.objects.create(
            name='Standard User',
            category='USER',
            description='Basic user with standard permissions'
        )
    }

    # Update existing users
    for user in User.objects.all():
        old_role = getattr(user, 'role', 'USER')
        if old_role in roles:
            user.role_new = roles[old_role]
            user.save(update_fields=['role_new'])

def reverse_roles(apps, schema_editor):
    Role = apps.get_model('users', 'Role')
    User = apps.get_model('users', 'User')
    
    # Convert back to old role format
    for user in User.objects.all():
        if user.role_new:
            user.role = user.role_new.category
            user.save(update_fields=['role'])
    
    Role.objects.all().delete()

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0003_useractivity'),
    ]

    operations = [
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('category', models.CharField(choices=[('SUPERADMIN', 'Super Admin'), ('ADMIN', 'Admin'), ('USER', 'User')], default='USER', max_length=10)),
                ('description', models.TextField(blank=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=models.deletion.SET_NULL, related_name='children', to='users.role')),
                ('level', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('permissions', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['category', 'level', 'name'],
            },
        ),
        # First create a temporary column
        migrations.AddField(
            model_name='user',
            name='role_new',
            field=models.ForeignKey(null=True, on_delete=models.deletion.PROTECT, related_name='users', to='users.role'),
        ),
        # Run the data migration
        migrations.RunPython(create_default_roles, reverse_roles),
        # Remove the old role field
        migrations.RemoveField(
            model_name='user',
            name='role',
        ),
        # Rename the new role field to role
        migrations.RenameField(
            model_name='user',
            old_name='role_new',
            new_name='role',
        ),
        # Make the role field required
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.ForeignKey(on_delete=models.deletion.PROTECT, related_name='users', to='users.role'),
        ),
    ]
